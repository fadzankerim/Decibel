import firebase from "firebase/app";
import "firebase/storage"; // Import the storage module (needed for side effects)

// ... Firebase initialization (same as backend) ...

const handleFileUpload = async (file, fileType) => { // Add fileType argument
    try {
        const storageRef = firebase.storage().ref(); // Get storage reference
        const fileExtension = file.name.split('.').pop();
        const uniqueFilename = `${uuidv4()}.${fileExtension}`;
        const fileRef = storageRef.child(uniqueFilename); // Reference to the file
        const uploadTask = fileRef.put(file); // Upload the file

        uploadTask.on(
            'state_changed',
            (snapshot) => {
                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                console.log('Upload is ' + progress + '% done');
            },
            (error) => {
                console.error("Upload Error:", error);
                // Handle unsuccessful uploads
            },
            () => {
                uploadTask.snapshot.ref.getDownloadURL().then(async (downloadURL) => {
                    console.log('File available at', downloadURL);
                    // Send the downloadURL to your backend
                    try {
                        const response = await fetch('/api/admin/songs', { // Your backend endpoint
                            method: 'POST',
                            body: JSON.stringify({
                                [fileType === 'audio' ? 'audioUrl' : 'imageUrl']: downloadURL, // Dynamic key
                                title: /* Get from input */,
                                artist: /* Get from input */,
                                albumId: /* Get from input */,
                                duration: /* Get from input */,
                            }),
                            headers: { 'Content-Type': 'application/json' }
                        });
                        const data = await response.json();
                        // Handle the response from your backend
                        console.log(data)
                    } catch (error) {
                        console.error("Error sending data to backend:", error);
                    }
                });
            }
        );

    } catch (error) {
        console.error("Error uploading to Firebase:", error);
    }
};

// Example usage:
const handleAudioUpload = (event) => {
    const file = event.target.files[0];
    handleFileUpload(file, 'audio');
};

const handleImageUpload = (event) => {
    const file = event.target.files[0];
    handleFileUpload(file, 'image');
};

// ... In your JSX:
<input type="file" onChange={handleAudioUpload} />
<input type="file" onChange={handleImageUpload} />